#!/bin/bash

#
# smf(5) start method for node-based CA services
#
. /lib/svc/share/smf_include.sh

function fail
{
	echo "$ns_arg0: $@"
	exit $SMF_EXIT_ERR_FATAL
}

function getprop
{
	local prop=$1
	svcprop -p com.joyent.ca,$prop $SMF_FMRI
}

function load_amqp
{
	local host

	if [[ -x $ns_amqpconfig ]]; then
		($ns_amqpconfig | while IFS="=" read key value; do
        		case $key in 
        		amqp_host)      echo "export AMQP_HOST=$value" ;;
        		amqp_port)      echo "export AMQP_PORT=$value" ;;
        		*)              echo "ignoring amqp-config key $key" >&2
        		esac
		done) > $ns_tmpfile || return 1
		. $ns_tmpfile && rm -f $tmpfile || return 1
		return 0
	fi

	host=$(getprop caconfig/amqp-host)
	[[ -n $host ]] || \
	    fail "fatal: no amqp-config and no amqp-host property."
	export AMQP_HOST=$host
}

function load_nodepath
{
	NODE_PATH=

	for subdir in node_modules lib/* deps/*; do
		[[ -d $subdir ]] || continue
		NODE_PATH="$NODE_PATH:$ns_root/$subdir"
	done

	export NODE_PATH
}

ns_arg0=$(basename $0)
ns_tmpfile=/var/tmp/$ns_arg0.$$
ns_amqpconfig=/opt/smartdc/agents/bin/amqp-config
ns_root="$(getprop caconfig/path-dist)"
ns_node="$(getprop caconfig/path-node)"
ns_logbase="$(getprop caconfig/path-logs)"
ns_name=
ns_args=

#
# Figure out which service to start.
#
case $SMF_FMRI in
	*caconfigsvc*)	ns_name=caconfigsvc ;;
	*caaggsvc*)	ns_name=caaggsvc ;;
	*cainstsvc*)	ns_name=cainstsvc ;;
	*) 		fail "don't know how to start $SMF_FMRI" ;;
esac

cd "$ns_root" || fail "failed to cd"
ns_root=$(pwd)
ns_exec=cmd/$ns_name.js
[[ -f $ns_exec ]] || fail "couldn't find $ns_exec"
[[ -x $ns_node ]] || fail "couldn't find executable node"

load_amqp || fail "failed to load amqp config"
load_nodepath || fail "failed to load node path"
env | egrep '^(AMQP_|NODE_PATH)'

#
# Launch the daemon.
#
mkdir -p "$ns_logbase/$ns_name" || fail "failed to create log directory"
ns_logfile="$ns_logbase/$ns_name/$(date +%F.%T)"
smf_clear_env
$ns_node $ns_exec $ns_logfile $ns_args &
exit $SMF_EXIT_OK
